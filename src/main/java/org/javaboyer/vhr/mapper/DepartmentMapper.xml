<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.javaboyer.vhr.mapper.DepartmentMapper" >
  <resultMap id="BaseResultMap" type="org.javaboyer.vhr.model.Department" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="parentId" property="parentId" jdbcType="INTEGER" />
    <result column="depPath" property="depPath" jdbcType="VARCHAR" />
    <result column="enabled" property="enabled" jdbcType="BIT" />
    <result column="isParent" property="isParent" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, parentId, depPath, enabled, isParent
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from department
    where id = #{id,jdbcType=INTEGER}
  </select>

  <resultMap id="DeptWithChildren" type="org.javaboyer.vhr.model.Department" extends="BaseResultMap">
    <!-- 关联嵌套select查询，column指定本次查询出的数据库中列名，其值会传递给select语句，select用于加载复杂类型属性的映射语句的 ID，它会从 column 属性指定的列中检索数据，作为参数传递给目标 select 语句。
         column可指定多个传递参数column="{prop1=col1,prop2=col2}"。fetchType可选，有效值为 lazy 和 eager。 指定属性后，将在映射中忽略全局配置参数 lazyLoadingEnabled，使用属性的值。lazy表示懒加载。
         fetchType常用于association和collection中，表示根据情况发送语句加载数据。
         懒加载常用于一对多或多对多情况下，立即加载常用于一对一情况下。
         当一对多或多对多，开启懒加载时，“多”部分的加载依赖于程序是否调用了“多”的部分，如果调用mybatis才回去发这部分sql加载数据。
         如：Department对象中有属性children(Department)，当程序getChildren时才回去触发数据加载children。
         Mybatis实现分页查询也是先查询select的count，然后根据limit实现。
    -->
    <collection property="children" ofType="org.javaboyer.vhr.model.Department" column="id" select="org.javaboyer.vhr.mapper.DepartmentMapper.getAllDepartmentsByPid"></collection>
  </resultMap>
  <!-- 根据parentId查询部门信息，resultMap嵌套了select实现递归查询  -->
  <select id="getAllDepartmentsByPid" parameterType="integer" resultMap="DeptWithChildren">
    select *
    from department
    where parentId = #{pid};
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from department
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.javaboyer.vhr.model.Department" >
    insert into department (id, name, parentId, 
      depPath, enabled, isParent)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER},
      #{depPath,jdbcType=VARCHAR}, #{enabled,jdbcType=BIT}, #{isParent,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="org.javaboyer.vhr.model.Department" >
    insert into department
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="parentId != null" >
        parentId,
      </if>
      <if test="depPath != null" >
        depPath,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
      <if test="isParent != null" >
        isParent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="depPath != null" >
        #{depPath,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=BIT},
      </if>
      <if test="isParent != null" >
        #{isParent,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.javaboyer.vhr.model.Department" >
    update department
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parentId = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="depPath != null" >
        depPath = #{depPath,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="isParent != null" >
        isParent = #{isParent,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.javaboyer.vhr.model.Department" >
    update department
    set name = #{name,jdbcType=VARCHAR},
      parentId = #{parentId,jdbcType=INTEGER},
      depPath = #{depPath,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=BIT},
      isParent = #{isParent,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>